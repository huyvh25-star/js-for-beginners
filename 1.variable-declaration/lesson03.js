// 1. Enhanced Object Property l√† g√¨?
// Trong ES6, khi khai b√°o object, b·∫°n c√≥ th·ªÉ vi·∫øt ng·∫Øn g·ªçn h∆°n nh·ªù m·ªôt s·ªë c√∫ ph√°p m·ªõi, 
// g·ªçi l√† Enhanced Object Property (t·∫°m d·ªãch: ‚ÄúThu·ªôc t√≠nh ƒë·ªëi t∆∞·ª£ng n√¢ng cao‚Äù).
// C√ì 3 ƒêI·ªÇM CH√çNH : 
// Shorthand Property Names ‚Äì Vi·∫øt t·∫Øt t√™n thu·ªôc t√≠nh n·∫øu tr√πng v·ªõi t√™n bi·∫øn.
// Shorthand Method Names ‚Äì Khai b√°o method ng·∫Øn g·ªçn, kh√¥ng c·∫ßn function.
// Computed Property Names ‚Äì T·∫°o key ƒë·ªông b·∫±ng bi·ªÉu th·ª©c.


// 2. Shorthand Property Names -----------------------------------------
// VERSION C≈® 
// let name = "Huy";
// let age = 21;

// let person = {
//     name: name,
//     age: age
// };

// ES 6 
let name = "Huy";
let age = 21;

let person = { name, age };
console.log(person); // { name: "Huy", age: 21 }
//Ch·ªâ c·∫ßn t√™n bi·∫øn tr√πng v·ªõi key th√¨ vi·∫øt 1 l·∫ßn l√† ƒë·ªß.
// ---------------------------------------------------------------------

// 3. Shorthand Method Names ------------------------------------------

// Tr∆∞·ªõc ES6:

// let person = {
//   sayHello: function () {
//     console.log("Hello!");
//   }
// };
// person.sayHello(); // Hello!

// ES 6
// let person = {
//     sayHello() {
//         console.log("Hello!");
//     }
// };
// person.sayHello(); // Hello!
// üëâ Kh√¥ng c·∫ßn vi·∫øt function.


// ===================================================================


// 4. Computed Property Names ---------------------------------------
// Cho ph√©p d√πng bi·ªÉu th·ª©c ho·∫∑c bi·∫øn l√†m key cho object.
// let prop = "age";
// let person = {
//     name: "Huy",
//     [prop]: 21   // key ƒë∆∞·ª£c l·∫•y t·ª´ bi·∫øn prop
// };
// console.log(person); // { name: "Huy", age: 21 }

let i = 1;
let obj = {
    ["level" + i]: "Beginner"
};
console.log(obj); // { level1: "Beginner" }

//====================================================================